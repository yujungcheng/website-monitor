name: website monitor testing

on: [push]

env:
  TOPIC: monitor
  DB_NAME: webmonitor
  DB_PASSWORD: test_password

jobs:
  monitor-test:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - run: ls -al

      # run postgresql
      - name: run postgresql
        run: |
          docker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=${DB_PASSWORD} -d postgres:latest
          sleep 10

      - name: create database
        run: |
          docker exec postgres createdb --username postgres ${DB_NAME}

      # run zookeeper & kafka

      - name: add kafka entity to /etc/hosts
        run: echo '127.0.0.1 kafka' | sudo tee -a /etc/hosts

      - name: create a network
        run: |
          docker network create kafka-net --driver bridge
      - name: run zookeeper
        run: |
          docker run -d --network kafka-net --name zookeeper -e ALLOW_ANONYMOUS_LOGIN=yes bitnami/zookeeper:latest

      - name: run kafka server
        run: |
          docker run -d --network kafka-net -h kafka --name kafka \
          -e ALLOW_PLAINTEXT_LISTENER=yes \
          -e KAFKA_BROKER_ID=1 \
          -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181 \
          -e KAFKA_CFG_LISTENERS=PLAINTEXT://kafka:9092 \
          -e KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092 \
          -p 9092:9092 \
          bitnami/kafka:latest

      - name: list docker containers
        run: sleep 10; docker ps

      - name: create topic
        run: |
          docker exec kafka \
          kafka-topics.sh --create --topic ${TOPIC} --replication-factor 1 --partitions 1 --bootstrap-server kafka:9092

      - name: list topic
        run: |
          docker exec kafka \
          kafka-topics.sh --list --bootstrap-server kafka:9092

      - name: describe topic
        run: |
          docker exec kafka \
          kafka-topics.sh --describe --topic ${TOPIC} --bootstrap-server kafka:9092

      # install packages
      - name: install python packages
        run: |
          sudo apt update
          sudo apt install -y python3-daemon python3-requests python3-psycopg2
          sudo pip3 install pykafka

      # create config file
      - name: create config
        run: |
          cp sample.config.ini config.ini
          sed -i 's/user =/user = postgres/g' config.ini
          sed -i "s/password =/password = ${DB_PASSWORD}/g" config.ini
          cat config.ini

      - name: create websites yaml
        run: |
          cp sample.websites.yaml websites.yaml

      # run writer and checker
      - name: start checker and writer
        run: |
          ./run_checker.py --debug --notls --daemon --filelog
          ./run_writer.py --debug --notls --daemon --filelog
          sleep 5

      - name: print checker log
        run: cat ./checker.log
      
      - name: print writer log
        run: cat ./writer.log

      # sleep 60 seconds and check database table
      - name: wait 60 seconds
        run: sleep 60

      - name: check website table
        run: |
          docker exec postgres psql -U postgres -d ${DB_NAME} -c 'SELECT * FROM website'

      - name: check topic table
        run: |
          docker exec postgres psql -U postgres -d ${DB_NAME} -c 'SELECT * FROM topic'

      - name: check status_history table
        run: |
          docker exec postgres psql -U postgres -d ${DB_NAME} -c 'SELECT count(*) status_history'

      # validate